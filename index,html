<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Carbonation Calculator</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&family=Roboto+Mono:wght@400;500&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f2f5;
        }
        .calculator-body {
            background-color: #e9ecef;
            border: 1px solid #ced4da;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        .display-box {
            background-color: #ffffff;
            border: 2px solid #adb5bd;
        }
        .display-value {
            font-family: 'Roboto Mono', monospace;
            font-weight: 500;
        }
        .slider-track {
            background: white;
            border: 1px solid #adb5bd;
            border-radius: 4px;
            height: 50px;
        }
        input[type=range] {
            -webkit-appearance: none;
            width: 100%;
            background: transparent;
        }
        input[type=range]:focus {
            outline: none;
        }
        input[type=range]::-webkit-slider-thumb {
            -webkit-appearance: none;
            height: 40px;
            width: 20px;
            background: #dc3545;
            border-radius: 3px;
            border: 2px solid #8e1a26;
            cursor: pointer;
            margin-top: -1px; /* Fine-tune vertical alignment */
            box-shadow: 0 1px 3px rgba(0,0,0,0.2);
        }
        input[type=range]::-moz-range-thumb {
            height: 40px;
            width: 20px;
            background: #dc3545;
            border-radius: 3px;
            border: 2px solid #8e1a26;
            cursor: pointer;
            box-shadow: 0 1px 3px rgba(0,0,0,0.2);
        }
    </style>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen p-4">

    <div class="w-full max-w-2xl">
        <header class="text-center mb-6">
            <h1 class="text-3xl font-bold text-gray-800">Interactive Carbonation Calculator</h1>
            <p class="text-gray-600 mt-1">For Homebrewing</p>
        </header>

        <div class="calculator-body rounded-lg p-4 sm:p-8">
            <!-- Beer Style Selector -->
            <div class="mb-8">
                <label for="beer-style-select" class="block text-lg font-medium text-gray-800 mb-2">Select a Beer Style (Optional)</label>
                <select id="beer-style-select" class="w-full p-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                    <option value="">-- Manual Mode --</option>
                    <option value="2.0">British Ale (Cask)</option>
                    <option value="2.4">Porter / Stout</option>
                    <option value="2.5">American Ale (IPA, Pale, Blonde)</option>
                    <option value="2.6">Lager / Pilsner</option>
                    <option value="2.8">Wheat Beer (American)</option>
                    <option value="3.5">Belgian Ale (Dubbel, Tripel)</option>
                    <option value="3.8">German Wheat Beer (Hefeweizen)</option>
                </select>
            </div>

            <!-- Display Section -->
            <div class="grid grid-cols-2 gap-4 mb-8">
                <div class="display-box rounded-md p-4 text-center">
                    <label for="co2-gl" class="block text-sm font-medium text-gray-700">CO₂ g/l</label>
                    <div id="co2-gl" class="display-value text-4xl font-bold text-gray-900 mt-1">5.0</div>
                </div>
                <div class="display-box rounded-md p-4 text-center">
                    <label for="co2-vol" class="block text-sm font-medium text-gray-700">CO₂ Vol</label>
                    <div id="co2-vol" class="display-value text-4xl font-bold text-gray-900 mt-1">2.5</div>
                </div>
            </div>

            <!-- Sliders Section -->
            <div class="space-y-12">
                <!-- Pressure Slider -->
                <div>
                    <div class="flex justify-between items-center mb-2">
                        <label for="pressure" class="font-semibold text-gray-800">Equilibrium Pressure</label>
                        <span class="font-mono text-lg bg-white px-3 py-1 rounded-md shadow-sm border border-gray-300"><span id="pressure-value">12.0</span> psi</span>
                    </div>
                    <div class="relative">
                        <div class="slider-track flex items-center px-[10px]">
                            <input type="range" id="pressure" min="0" max="45" value="12" step="0.5" class="w-full">
                        </div>
                        <div id="pressure-scale-container" class="relative h-6 mt-1 px-[10px]">
                            <!-- Scale generated by JS -->
                        </div>
                    </div>
                </div>

                <!-- Temperature Slider -->
                <div>
                    <div class="flex justify-between items-center mb-2">
                        <label for="temperature" class="font-semibold text-gray-800">Temperature</label>
                        <span class="font-mono text-lg bg-white px-3 py-1 rounded-md shadow-sm border border-gray-300"><span id="temperature-value">10.0</span> °C / <span id="temperature-f-value">50</span> °F</span>
                    </div>
                    <div class="relative">
                        <div class="slider-track flex items-center px-[10px]">
                            <input type="range" id="temperature" min="0" max="40" value="10" step="0.5" class="w-full">
                        </div>
                        <div id="temperature-scale-container" class="relative h-6 mt-1 px-[10px]">
                             <!-- Scale generated by JS -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
         <footer class="text-center text-gray-500 text-sm mt-8">
            <p>Calculations are based on standard brewing formulas. Always use a calibrated pressure gauge.</p>
        </footer>
    </div>

    <script>
        // DOM element references
        const pressureSlider = document.getElementById('pressure');
        const temperatureSlider = document.getElementById('temperature');
        const beerStyleSelect = document.getElementById('beer-style-select');
        const pressureValueSpan = document.getElementById('pressure-value');
        const temperatureValueSpan = document.getElementById('temperature-value');
        const temperatureFValueSpan = document.getElementById('temperature-f-value');
        const co2GlDisplay = document.getElementById('co2-gl');
        const co2VolDisplay = document.getElementById('co2-vol');

        // --- CALCULATION FUNCTIONS (Corrected) ---
        
        /**
         * Calculates CO2 volumes based on temperature (C) and gauge pressure (PSI).
         * This uses a reliable polynomial formula to approximate the Zahm-Nagel charts.
         */
        function calculateCarbonation(tempC, pressurePsi) {
            const tempF = tempC * 1.8 + 32;
            // This polynomial calculates CO2 solubility in water at atmospheric pressure for a given temp in F.
            const co2VolsAtAtm = 3.0378 - (0.050062 * tempF) + (0.00026555 * tempF * tempF);
            // Adjust the atmospheric solubility based on the actual (absolute) pressure.
            const finalVols = co2VolsAtAtm * (pressurePsi + 14.695) / 14.695;
            const co2Gl = finalVols * 1.977;
            return { co2Vol: finalVols, co2Gl: co2Gl };
        }
        
        /**
         * Calculates the required gauge pressure (PSI) for a target CO2 volume at a given temperature (C).
         * This is the mathematical inverse of the calculateCarbonation function.
         */
        function calculatePressure(tempC, co2Vol) {
            if (co2Vol <= 0) return 0;
            const tempF = tempC * 1.8 + 32;
            // Calculate CO2 solubility at atmospheric pressure for the given temp.
            const co2VolsAtAtm = 3.0378 - (0.050062 * tempF) + (0.00026555 * tempF * tempF);
            // Can't achieve carbonation if liquid has no solubility, return max pressure as a fallback.
            if (co2VolsAtAtm <= 0) return 45; 
            // Invert the formula to solve for pressure.
            const pressurePsi = ((co2Vol / co2VolsAtAtm) * 14.695) - 14.695;
            return Math.max(0, pressurePsi); // Pressure cannot be negative.
        }

        // --- UI UPDATE FUNCTIONS ---

        function updateUIFromSliders() {
            beerStyleSelect.value = ""; // Set dropdown to "Manual Mode"
            
            const pressure = parseFloat(pressureSlider.value);
            const temperature = parseFloat(temperatureSlider.value);
            const tempF = Math.round(temperature * 1.8 + 32);

            pressureValueSpan.textContent = pressure.toFixed(1);
            temperatureValueSpan.textContent = temperature.toFixed(1);
            temperatureFValueSpan.textContent = tempF;
            
            const carb = calculateCarbonation(temperature, pressure);

            co2VolDisplay.textContent = Math.max(0, carb.co2Vol).toFixed(2);
            co2GlDisplay.textContent = Math.max(0, carb.co2Gl).toFixed(2);
        }

        function updateUIFromStyleSelection() {
            const targetCo2Vol = parseFloat(beerStyleSelect.value);
            if (!targetCo2Vol) return; // Exit if in "Manual Mode"

            const temperature = parseFloat(temperatureSlider.value);
            const requiredPressure = calculatePressure(temperature, targetCo2Vol);

            co2VolDisplay.textContent = targetCo2Vol.toFixed(2);
            co2GlDisplay.textContent = (targetCo2Vol * 1.977).toFixed(2);
            pressureSlider.value = requiredPressure;
            pressureValueSpan.textContent = requiredPressure.toFixed(1);
        }
        
        // --- SCALE GENERATION ---
        
        function createScale(containerId, min, max, step) {
            const scaleContainer = document.getElementById(containerId);
            if (!scaleContainer) return;
            scaleContainer.innerHTML = ''; 

            for (let i = min; i <= max; i += step) {
                const position = ((i - min) / (max - min)) * 100;
                const tickWrapper = document.createElement('div');
                tickWrapper.className = 'absolute';
                tickWrapper.style.left = `${position}%`;
                tickWrapper.style.transform = 'translateX(-50%)';
                const tick = document.createElement('div');
                tick.className = 'h-2 w-px bg-gray-500';
                const label = document.createElement('span');
                label.className = 'absolute -bottom-4 text-xs font-mono text-gray-600';
                label.textContent = i;
                label.style.left = '50%';
                label.style.transform = 'translateX(-50%)';
                tickWrapper.appendChild(tick);
                tickWrapper.appendChild(label);
                scaleContainer.appendChild(tickWrapper);
            }
        }

        // --- EVENT LISTENERS ---

        pressureSlider.addEventListener('input', updateUIFromSliders);
        temperatureSlider.addEventListener('input', updateUIFromSliders);
        
        beerStyleSelect.addEventListener('change', () => {
            if (beerStyleSelect.value) {
                 updateUIFromStyleSelection();
            } else {
                 // When user re-selects "-- Manual Mode --"
                 updateUIFromSliders();
            }
        });

        // --- INITIALIZATION ---
        
        document.addEventListener('DOMContentLoaded', () => {
            updateUIFromSliders();
            createScale('pressure-scale-container', 0, 45, 5);
            createScale('temperature-scale-container', 0, 40, 5);
        });
    </script>

</body>
</html>
